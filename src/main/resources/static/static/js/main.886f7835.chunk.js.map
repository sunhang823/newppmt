{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdataProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/Layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","nextPorps","_nextPorps$project","match","params","getProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdataProjectTask","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","Footer","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Layout_Footer","Boolean","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.886f7835.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it.\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date (yyyy-mm-dd)</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date (yyyy-mm-dd)</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextPorps) {\n    if (nextPorps.errors) {\n      this.setState({ errors: nextPorps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextPorps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(UpdateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <h6>Start Date (yyyy-mm-dd)</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date (yyyy-mm-dd)</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"projectBoard\">\n              <div className=\"alert alert-info text-center\" role=\"alert\">\n                No Project Tasks on this board\n              </div>\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"projectBoard\">\n        <div className=\"container\">\n          <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n          </Link>\n          <br />\n          <hr />\n          {BoardContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapToStateProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapToStateProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date (yyyy-mm-dd)</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdataProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      created_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const UpdataProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At\n    };\n\n    //console.log(UpdataProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdataProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date (yyyy-mm-dd)</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdataProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdataProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Mangement Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer bg-primary\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-auto\">\n              <h5>Links</h5>\n            </div>\n            <div className=\"col-auto\">\n              <ul className=\"list-unstyled\">\n                <li>\n                  <a href=\"http://hangsun.site\" className=\"link\">\n                    Developer's Homepage\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"row justify-content-center\">\n            <div className=\"col-auto\">\n              <p>© Copyright 2019 Hang Sun</p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdataProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdataProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\nimport Footer from \"./components/Layout/Footer\";\n\nconst jwtToken = localStorage.jwtToken;\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          {\n            //Public Routes\n          }\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //Private Routes\n          }\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecureRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecureRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecureRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdataProjectTask}\n            />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}